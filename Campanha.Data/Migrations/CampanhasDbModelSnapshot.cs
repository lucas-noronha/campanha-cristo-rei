// <auto-generated />
using System;
using Campanha.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Campanha.Data.Migrations
{
    [DbContext(typeof(CampanhasDb))]
    partial class CampanhasDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Campanha.Domain.Entidades.Beneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("beneficios", (string)null);
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.BeneficioFamiliar", b =>
                {
                    b.Property<int>("FamiliaId")
                        .HasColumnType("integer")
                        .HasColumnName("familia_id");

                    b.Property<int>("BeneficioId")
                        .HasColumnType("integer")
                        .HasColumnName("beneficio_id");

                    b.Property<int>("OpcaoBeneficio")
                        .HasColumnType("integer")
                        .HasColumnName("opcao_beneficio");

                    b.Property<DateTime?>("DataFinalizacaoBeneficiamento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_finalizacao");

                    b.Property<DateTime?>("DataInicioBeneficiamento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_inicio");

                    b.HasKey("FamiliaId", "BeneficioId", "OpcaoBeneficio");

                    b.HasIndex("BeneficioId");

                    b.ToTable("beneficios_familia", (string)null);
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.CadastroDeCampanha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_finalizacao");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_inicio");

                    b.Property<string>("NomeCampanha")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("campanha", (string)null);
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("equipe", (string)null);
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Familia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<int>("CampanhaId")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_campanha");

                    b.Property<string>("Celular")
                        .HasColumnType("text")
                        .HasColumnName("celular");

                    b.Property<string>("Cep")
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Cpf")
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<string>("DiasParaReceberPessoas")
                        .HasColumnType("text")
                        .HasColumnName("dias_receber_pessoas");

                    b.Property<bool>("FrequentaIgreja")
                        .HasColumnType("boolean")
                        .HasColumnName("frequenta_igreja");

                    b.Property<int>("Genero")
                        .HasColumnType("integer")
                        .HasColumnName("genero");

                    b.Property<string>("GrupoOracao")
                        .HasColumnType("text")
                        .HasColumnName("grupo_oracao");

                    b.Property<string>("IgrejaFrequentada")
                        .HasColumnType("text")
                        .HasColumnName("igreja_frequentada");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Nit")
                        .HasColumnType("text")
                        .HasColumnName("nit");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NumeroEndereco")
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<bool>("PertenceGrupoOracao")
                        .HasColumnType("boolean")
                        .HasColumnName("pertence_grupo_oracao");

                    b.Property<bool>("PossuiFilhos")
                        .HasColumnType("boolean")
                        .HasColumnName("possui_filhos");

                    b.Property<int>("QtdePessoas")
                        .HasColumnType("integer")
                        .HasColumnName("qtde_pessoas");

                    b.Property<bool>("ReceberPessoasEmCasa")
                        .HasColumnType("boolean")
                        .HasColumnName("recebe_pessoas");

                    b.Property<double>("RendaTotalEstimada")
                        .HasColumnType("double precision")
                        .HasColumnName("renda_familiar_estimada");

                    b.Property<string>("TelefoneFixo")
                        .HasColumnType("text")
                        .HasColumnName("tel_fixo");

                    b.HasKey("Id");

                    b.HasIndex("CampanhaId");

                    b.ToTable("familia", (string)null);
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("AtividadeDoProjeto")
                        .HasColumnType("text")
                        .HasColumnName("atividade_projeto");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cargo")
                        .HasColumnType("text")
                        .HasColumnName("cargo");

                    b.Property<string>("Cep")
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Contato")
                        .HasColumnType("text")
                        .HasColumnName("contato");

                    b.Property<string>("ContatoSecundario")
                        .HasColumnType("text")
                        .HasColumnName("contato_secundario");

                    b.Property<string>("Cpf")
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int?>("EquipeId")
                        .HasColumnType("integer")
                        .HasColumnName("equipe_id");

                    b.Property<int>("Genero")
                        .HasColumnType("integer")
                        .HasColumnName("genero");

                    b.Property<string>("GrupoPastoral")
                        .HasColumnType("text")
                        .HasColumnName("grupo_pastoral");

                    b.Property<string>("HorarioDisponivel")
                        .HasColumnType("text")
                        .HasColumnName("horario_disponivel");

                    b.Property<string>("Login")
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.ToTable("usuario", "public");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AtividadeDoProjeto")
                        .HasColumnType("text")
                        .HasColumnName("atividade_projeto");

                    b.Property<string>("Bairro")
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Contato")
                        .HasColumnType("text")
                        .HasColumnName("contato");

                    b.Property<string>("ContatoSecundario")
                        .HasColumnType("text")
                        .HasColumnName("contato_secundario");

                    b.Property<string>("Cpf")
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int?>("EquipeDeInteresseId")
                        .HasColumnType("integer")
                        .HasColumnName("equipe_interesse_id");

                    b.Property<int>("Genero")
                        .HasColumnType("integer")
                        .HasColumnName("genero");

                    b.Property<string>("GrupoPastoral")
                        .HasColumnType("text")
                        .HasColumnName("grupo_pastoral");

                    b.Property<string>("HorarioDisponivel")
                        .HasColumnType("text")
                        .HasColumnName("horario_disponivel");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("EquipeDeInteresseId");

                    b.ToTable("voluntario", "public");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.BeneficioFamiliar", b =>
                {
                    b.HasOne("Campanha.Domain.Entidades.Beneficio", "Beneficio")
                        .WithMany()
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Campanha.Domain.Entidades.Familia", "Familia")
                        .WithMany()
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficio");

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Familia", b =>
                {
                    b.HasOne("Campanha.Domain.Entidades.CadastroDeCampanha", "Campanha")
                        .WithMany("Familias")
                        .HasForeignKey("CampanhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanha");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Usuario", b =>
                {
                    b.HasOne("Campanha.Domain.Entidades.Equipe", "Equipe")
                        .WithMany("Membros")
                        .HasForeignKey("EquipeId");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Voluntario", b =>
                {
                    b.HasOne("Campanha.Domain.Entidades.Equipe", "EquipeDeInteresse")
                        .WithMany("Voluntarios")
                        .HasForeignKey("EquipeDeInteresseId");

                    b.Navigation("EquipeDeInteresse");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.CadastroDeCampanha", b =>
                {
                    b.Navigation("Familias");
                });

            modelBuilder.Entity("Campanha.Domain.Entidades.Equipe", b =>
                {
                    b.Navigation("Membros");

                    b.Navigation("Voluntarios");
                });
#pragma warning restore 612, 618
        }
    }
}
